from aiogram import types
from aiogram.types import FSInputFile
from src.keyboard import get_main_keyboard, get_submenu_keyboard
from aiogram.types import InputMediaPhoto

categories = ["–î–æ–∫—É–º–µ–Ω—Ç—ã", "–£—á–µ–±–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å", "–°–ª—É–∂–±–∞ –∑–∞–±–æ—Ç—ã", "–î—Ä—É–≥–æ–µ"]

category_pictures = {
    "–î–æ–∫—É–º–µ–Ω—Ç—ã": "images/documents.jpg",
    "–£—á–µ–±–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å": "images/study.jpg",
    "–°–ª—É–∂–±–∞ –∑–∞–±–æ—Ç—ã": "images/support.jpg",
    "–î—Ä—É–≥–æ–µ": "images/other.webp", 

}

category_texts = {
    "–î–æ–∫—É–º–µ–Ω—Ç—ã": "–¢–µ–±–µ –ø–æ–º–æ–∂–µ—Ç —É—á–µ–±–Ω—ã–π –æ—Ç–¥–µ–ª, –æ–Ω –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ 4 —ç—Ç–∞–∂–µ —Ä—è–¥–æ–º —Å –∫–∞–±–∏–Ω–µ—Ç–æ–º 4.2",
    "–£—á–µ–±–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å": "–¢—ã –º–æ–∂–µ—à—å –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –Ω–∞ —Å–≤–æ—é –∫–∞—Ñ–µ–¥—Ä—É. –û–Ω–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ 4 —ç—Ç–∞–∂–µ –Ω–∞–ø—Ä–æ—Ç–∏–≤ —Å—Ç–æ–ª–æ–≤–æ–π",
    "–°–ª—É–∂–±–∞ –∑–∞–±–æ—Ç—ã": "–û–±—Ä–∞—Ç–∏—Å—å –≤ –∫–∞–±–∏–Ω–µ—Ç —Å–ª—É–∂–±—ã –∑–∞–±–æ—Ç—ã –Ω–∞ 3 —ç—Ç–∞–∂–µ —Ä—è–¥–æ–º —Å –∫–∞–±–∏–Ω–µ—Ç–æ–º 3.8",
    "–î—Ä—É–≥–æ–µ": "–†–∞–∑–Ω—ã–µ –ø–æ–ª–µ–∑–Ω—ã–µ —Å–≤–µ–¥–µ–Ω–∏—è.",
}

user_last_message = {}

async def start_handler(message: types.Message):
    welcome_text = (
        f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}!\n"
        "–Ø –∑–Ω–∞—é, —á—Ç–æ —É —Ç–µ–±—è –≤–æ–ø—Ä–æ—Å –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –µ–≥–æ —Ä–µ—à–∏—Ç—å ‚ù§Ô∏è"
    )
    photo_path = "images/other.webp" 

    await message.answer_photo(
        photo=FSInputFile(photo_path),
        caption=welcome_text,
        reply_markup=get_main_keyboard()
    )


async def callback_handler(callback: types.CallbackQuery):
    data = callback.data

    if data == "back_to_main":
        welcome_text = (
            f"–ü—Ä–∏–≤–µ—Ç, {callback.from_user.full_name}!\n"
            "–Ø –∑–Ω–∞—é, —á—Ç–æ —É —Ç–µ–±—è –≤–æ–ø—Ä–æ—Å –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –µ–≥–æ —Ä–µ—à–∏—Ç—å ‚ù§Ô∏è"
        )
        photo_path = "images/other.webp" 

        media = InputMediaPhoto(media=FSInputFile(photo_path), caption=welcome_text)

        try:
            await callback.message.edit_reply_markup(reply_markup=None)
            await callback.message.edit_media(media=media, reply_markup=get_main_keyboard())
        except Exception as e:
            await callback.message.answer_photo(
                photo=FSInputFile(photo_path),
                caption=welcome_text,
                reply_markup=get_main_keyboard()
            )

        await callback.answer()
        return



    if data == "ignore":
        await callback.answer("–í—ã —É–∂–µ –∑–¥–µ—Å—å üòâ", show_alert=True)
        return

    if data == "–î—Ä—É–≥–æ–µ":
        text = category_texts.get("–î—Ä—É–≥–æ–µ", "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        photo_path = category_pictures.get("–î—Ä—É–≥–æ–µ")
        submenu = get_submenu_keyboard("–î—Ä—É–≥–æ–µ")

        if photo_path:
            media = InputMediaPhoto(media=FSInputFile(photo_path), caption=text)
            try:
                # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∫–Ω–æ–ø–∫–∏, –º–µ–Ω—è–µ–º —Ñ–æ—Ç–æ –∏ –∫–Ω–æ–ø–∫–∏ –Ω–∞ –ø–æ–¥–º–µ–Ω—é
                await callback.message.edit_reply_markup(reply_markup=None)
                await callback.message.edit_media(media=media, reply_markup=submenu)
            except Exception:
                # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–∫—Ä–∞–π–Ω–∏–π —Å–ª—É—á–∞–π)
                await callback.message.answer_photo(
                    photo=FSInputFile(photo_path),
                    caption=text,
                    reply_markup=submenu
                )
        else:
            # –ï—Å–ª–∏ —Ñ–æ—Ç–æ –Ω–µ—Ç ‚Äî —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç –∏ –∫–Ω–æ–ø–∫–∏
            try:
                await callback.message.edit_text(text=text, reply_markup=submenu)
            except Exception:
                await callback.message.answer(text=text, reply_markup=submenu)

        await callback.answer()
        return


    if data in categories:
        # –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å —Ñ–æ—Ç–æ
        text = category_texts.get(data, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        photo_path = category_pictures.get(data)
        keyboard = get_main_keyboard(disabled_category=data)

        if photo_path:
            media = InputMediaPhoto(media=FSInputFile(photo_path), caption=text)
            try:
                # –£–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–Ω–æ–ø–∫–∏, –º–µ–Ω—è–µ–º —Ñ–æ—Ç–æ –∏ —Å—Ç–∞–≤–∏–º –Ω–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏
                await callback.message.edit_reply_markup(reply_markup=None)
                await callback.message.edit_media(media=media, reply_markup=keyboard)
            except Exception:
                # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ç–æ –∏ –∫–Ω–æ–ø–∫–∞–º–∏ (—Ä–µ–¥–∫–æ, –Ω–æ –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π)
                await callback.message.answer_photo(
                    photo=FSInputFile(photo_path),
                    caption=text,
                    reply_markup=keyboard
                )
        else:
            try:
                await callback.message.edit_text(text=text, reply_markup=keyboard)
            except Exception:
                await callback.message.answer(text=text, reply_markup=keyboard)

        await callback.answer()
        return

    await callback.answer("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞", show_alert=True)
